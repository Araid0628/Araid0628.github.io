<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[《机器学习实战》SVM补充内容]]></title>
    <url>%2F2018%2F10%2F21%2F%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%E3%80%8BSVM%E8%A1%A5%E5%85%85%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[对于《机器学习实战》一书SVM章节程序清单6-2 简化版SVM算法中部分代码的数学原理补充 if(labelMat[i] != labelMat[j]): L = max(0, alphas[j]-alphas[i]) H = min(C, C+alphas[j]-alphas[i]) else: L = max(0, alphas[j]+alphas[i]-C) H = min(C, C+alphas[j]-alphas[i]) 这段代码在《机器学习实战》书中只说明了保证alpha在0与C之间，根据约束条件$0\leq\alpha$_i$\leqC i=1,2$，实际上是单变量的最优化问题。]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>SVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo进行Latex公式渲染测试]]></title>
    <url>%2F2018%2F10%2F12%2FLatex%E6%B8%B2%E6%9F%93%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[安装插件首先需要安装Mathjax插件，MathJax是一款运行在浏览器中的开源的数学符号渲染引擎，使用MathJax可以方便的在浏览器中显示数学公式，不需要使用图片。目前，MathJax可以解析Latex、MathML和ASCIIMathML的标记语言。(Wiki) npm install hexo-math –save 更换渲染引擎接着要更换Hexo的markdown渲染引擎 npm uninstall hexo-renderer-marked –save npm install hexo-renderer-kramed –save 更改配置文件进入到主题目录，找到_config.yml文件，把mathjax默认的值改为true # MathJax Support mathjax: enable: true per_page: true #cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML cdn: //cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML 写博客在每次编写需要使用LaTeX渲染的博客文章中，需要在Front-matter里打开mathjax开关 title: test abbrlink: 7717490f date: 2018-10-12 10:06:12 tags: mathjax: true 测试 $T(n) = \Theta(n)$ $T(n) = \Theta(n)$]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据挖掘 Week1作业]]></title>
    <url>%2F2018%2F09%2F19%2F%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98WEEK1%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[第一周作业要求2组人工搜集中国科学院院士、中国工程院院士的名单，在百度自动获取院士个人主页url，编写爬虫采集院士人类学、学位、研究方向和国家科技奖数据，设计数据库表，保存数据。 小组分工CHY：科学院院士信息抓取ZBC：数据到MySQLme：工程院院士信息抓取 Step1 网站分析中国工程院院士名单：http://www.cae.cn/cae/html/main/col48/column_48_1.html 可以看到所有学部的院士信息已经汇总在一个网页中，后续编写爬虫抓取个人主页url很方便。 Step2 抓取url在编写爬虫时用到了XPath，XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航。 XPath 使用路径表达式在 XML 文档中进行导航 XPath 包含一个标准函数库 XPath 是 XSLT 中的主要元素 XPath 是一个 W3C 标准在这里通过XPath的语法分别抓取li标签下的herf的内容和text的内容，以获得院士个人主页的url和院士的姓名，存储在list中。 def getURL(): #抓取工程院院士的URL和姓名 page = urllib.request.urlopen('http://www.cae.cn/cae/html/main/col48/column_48_1.html') html = page.read() urlList = [] sel = Selector(text=html, type="html") urlList = sel.xpath('//li[re:test(@class, "name_list")]//@href').extract() nameList = sel.xpath('//li[re:test(@class, "name_list")]//a/text()').extract() #print(url) i = 0 for i in range(len(urlList)): urlList[i] = "http://www.cae.cn" + urlList[i] return urlList, nameList #print(url) Step3 抓取个人信息接着仍使用XPath语法从urlList中依次爬取院士主页的个人信息。 infoPage = urllib.request.urlopen(academyURL) infoHTML = infoPage.read() infoSelect = Selector(text=infoHTML, type="html") info = infoSelect.xpath('//div[@class="intro"]/p/text()').extract()[0] return info Step4 信息提取可以发现院士信息页中大部分信息描述具有某些规律，比如描述院士在某个专业方面的成就时的描述会采用“金属材料及粉末冶金专家”、“耳鼻咽喉学专家”等以“专家”、“学家”结尾的格式，可以通过正则表达式和findall()函数找出对应的描述。 pattern = re.compile(r'(\d{4}年(?:\d{1,2}月)?(?:\d{0,2}日)?)(?:(?:出生)|(?:生，)|(?:生于)|(?:出生于))') birthday = pattern.findall(c) pattern2 = re.compile(r'^.*?(?:(?:学家)|(?:专家))') direction = pattern2.findall(c) pattern3 = re.compile(r'(?:获)[^(?:。)]+(?:奖)') award = pattern3.findall(c) pattern4 = re.compile(r'博士|硕士|学士') degree = pattern4.findall(c)]]></content>
      <categories>
        <category>作业</category>
      </categories>
      <tags>
        <tag>数据挖掘</tag>
        <tag>正则表达式</tag>
        <tag>爬虫</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用插件和IDM下载百度云盘]]></title>
    <url>%2F2018%2F09%2F10%2F%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6%E5%92%8CIDM%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98%2F</url>
    <content type="text"><![CDATA[背景在某度云上保存了很多课程，但因为某度对于网盘速度的限制，只能寻找破解版某度云盘下载文件。听说破解版最近不好使了，在网上查找了很多方法，发现只有利用Chrome的插件和IDM才能达到最理想的下载效果。 软件 Chrome浏览器 IDM下载器（(Integrated Data Multiplexer） 扩展程序 BaiduPan Explorer 步骤 安装上述软件 使用插件抓取链接 使用IDM下载即可]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>IDM</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好，Hexo]]></title>
    <url>%2F2018%2F09%2F09%2F%E4%BD%A0%E5%A5%BD%EF%BC%8CHexo%2F</url>
    <content type="text"></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F09%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
